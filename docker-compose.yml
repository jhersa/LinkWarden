services:
  postgres:
    platform: linux/x86_64
    image: postgres:16
    restart: unless-stoped
    environment:
      - POSTGRES_USER=${PG_USER:=postgres}
      - POSTGRES_PASSWORD=${PG_PASSWORD:=postgres}
      - POSTGRES_DB=${PG_DATABASE:=mlflow}
    volumes:
      - pg_data:/var/lib/postgresql/data/
    networks:
      - backend

  minio:
    platform: linux/x86_64
    image: minio/minio:RELEASE.2024-09-13T20-26-02Z.fips
    restart: unless-stoped
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:=minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_ACCESS_KEY:=minioadmin}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - frontend
      - backend

  create_buckets:
    platform: linux/x86_64
    image: minio/mc:RELEASE.2024-06-24T19-40-33Z.fips
    depends_on:
      - s3
    networks:
      - backend
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc config host add s3 http://s3:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_ACCESS_KEY} --api S3v4;
      /usr/bin/mc mb --ignore-existing s3/${MLFLOW_BUCKET_NAME};
      /usr/bin/mc anonymous set download s3/${MLFLOW_BUCKET_NAME};
      /usr/bin/mc anonymous set upload s3/${MLFLOW_BUCKET_NAME};
      /usr/bin/mc anonymous set public s3/${MLFLOW_BUCKET_NAME};
      exit 0;
      '

  tracking_server:
    depends_on:
      - db
    restart: always
    image: bitnami/mlflow:2.14.1
    ports:
      - "${MLFLOW_PORT}:5000"
    networks:
      - frontend
      - backend
      - shared_network
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://s3:${MINIO_PORT}
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      mlflow server \
        --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DATABASE} \
        --host 0.0.0.0 \
        --port 5000 \
        --artifacts-destination s3://mlflow/;
      '

volumes:
  pg_data:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  shared_network:
    external: true